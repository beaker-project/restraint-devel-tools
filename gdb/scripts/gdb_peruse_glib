#========================================================
# File: gdb_peruse_glib memory
#
# Contains gdb functions used to extract memory from
# glib functions written in 'C'.  glib is a library
# used in restraint.
#
#========================================================

#
# key_file_step_group <address-of-task>
#
# Dumps list of key value pairs for a
# given group.
#
# Sample use:
# key_file_step_kv_pairs 0x<addr-of-key_value_pairs>
# key_file_step_kv_pairs ((GKeyFileGroup *)$grp_node)->key_value_pairs
#
define key_file_step_kv_pairs
    set $n_kvp = (GList *)$arg0
    # set $kvp = $arg0
    # set $n_kvp = ((GList *)$kvp)->next
    while $n_kvp != 0x0
        printf "\nKVP GList 0x%lx\n", $n_kvp
        print *$n_kvp
        printf "KVP Data Content:\n"
        print *((GKeyFileKeyValuePair *)$n_kvp->data)
        set $n_kvp = $n_kvp->next
    end
end

#
# key_file_step_group <address-of-task>
#
# Dumps list of glib key_file groups
# utilized with restraint config file.
# Used in glib func g_key_file_to_data().
#
# Sample use:
# key_file_step_group 0x<addr-of-keyfile->groups>
# key_file_step_group key_file->groups
#
define key_file_step_group

    printf "\n\nGenerated by gdb script 'key_file_step_group'"
    printf " using argument 0x%lx\n\n", $arg0

   set print pretty off
   #set $gr_node = $arg0
   #print *(GList *)$gr_node
   set $n_grp = ((GList *)$arg0)
   while $n_grp != 0x0
       printf "\n##--##--##--##--##--##--##--##--##--##--##--##--##--##--\n\n"
       printf "Group GList: 0x%lx\n", $n_grp 
       print *$n_grp
       set $grp_node = ((GKeyFileGroup *)$n_grp->data)
       if $grp_node->name
           printf "\nName: %s\n", $grp_node->name
       else
           printf "\nName: None\n"
       end
       print *$grp_node
       set $kvp = ((GKeyFileGroup *)$grp_node)->key_value_pairs
       key_file_step_kv_pairs $kvp
       set $n_grp = $n_grp->next
   end
   printf "\n##--##--##--##--##--##--##--##--##--##--##--##--##--##--\n\n"
end
