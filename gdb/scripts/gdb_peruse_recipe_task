#========================================================
# File: gdb_peruse_recipe_task
#
# Contains gdb functions used to extract recipe and task
# memory from restraint functions written in 'C'.
# See README for introduction on how to use.
# These scripts depend on file gdb_set_env to be
# loaded (sourced).
#
#========================================================

# 
# print_task  <address-of-task>
#
# Dumps the content of a task control block
# defined by the structure (Task *) defined
# in task.h file.
#
# Sample use:
# print_task  0x<addr-of-task>
# print_task  variable-containing-task-addr
#
define print_task
    printf "\n\nGenerated by gdb script 'print_task' "
    printf "  using argument 0x%lx\n\n", $arg0

    set $task = (Task*)$arg0
    printf "\n##--##--##--##--##--##--##--##--##--##--##--##--##--##--\n"
    printf "Task ID: %s NAME: %s\n", $task->task_id, $task->name
    printf "##--##--##--##--##--##--##--##--##--##--##--##--##--##--\n\n"
    print *$task
    printf "\nTASK URI:\n"
    print *$task->task_uri
    printf "\nTASK PARAMS :\n"
    set $n_param = $task->params
    while $n_param != 0x0
        print *(Param *)$n_param->data
        set $n_param = $n_param->next
    end
    printf "\nTASK Roles:\n"
    set $n_role = $task->roles
    while $n_role != 0x0
        print *(Role *)$n_role->data
        set $n_role = $n_role->next
    end
    printf "\nTASK OFFSETS:\n"
    print *$task->offsets
    #print *((Task*)app_data->tasks->data)->roles
    #print *(Role *)((Task*)app_data->tasks->data)->roles TBD
end

#
# print_all_task_data <address-of-task-list>
#
# Steps through the recipe task list (app_data->tasks)
# and dumps data for each task using print_task
# function.  The address-of-task-list comes from
# tasks contained in (AppData *) defined in
# file server.h
#
# Sample use:
# print_all_task_data 0x<addr-of-AppData>
# print_all_task_data variable-containing-AppData-address
# print_all_task_data app_data # appData commonly used var
#
define print_all_task_data
  printf "\n\nGenerated by gdb script 'print_all_task_data' "
  printf "using argument 0x%lx\n\n", $arg0

  set $app_data = (AppData *)$arg0
  set $n_task = $app_data->tasks
  printf "AppData Tasks:\n"
  while $n_task != 0x0
       print_task $n_task->data
       set $n_task = $n_task->next
  end
end

# print_all_task_id_name app_data
#
# Steps through the recipe task list (app_data->tasks)
# and dumps task id and name.  This is good for
# brief list of tasks in a recipe.  The
# address-of-task-list comes from tasks contained
# in (AppData *) defined in file server.h
#
# Sample use:
# print_all_task_id_name 0x<addr-of-AppData>
# print_all_task_id_name variable-containing-AppData-address
# print_all_task_id_name app_data #app_data commonly used var
#
define print_all_task_id_name
  printf "\n\nGenerated by gdb script 'print_all_task_id_name' "
  printf "using argument 0x%lx\n\n", $arg0

  printf "##--##--##--##--##--##--##--##--##--##--##--##--##--##--"
  set $app_data = (AppData *)$arg0
  set $n_task = $app_data->tasks
  while $n_task != 0x0
       set $this = (Task *)$n_task->data
       printf "Task ID: %s name: %s\n", $this->task_id, $this->name
       set $n_task = $n_task->next
  end
end

#
# print_app_data app_data
#
# Prints content of app data not including
# its task list. The app_data is defined by
# (AppData *) defined in file server.h
#
# Sample use:
# print_app_data 0x<addr-of-AppData>
# print_app_data variable-containing-AppData-address
# print_app_data app_data #app_data commonly used var
#
# gdb restraintd core.restraintd.0.0cbb3a6e9cc2404482c4957d71b390ea.1997.1576231651000000
# source ../gdb/scripts/gdb_set_env
# source ../gdb/scripts/gdb_recipe_task_peruse
# up 10
# print_app_data app_data

define print_app_data
  setup_env
  printf "\n\nGenerated by gdb script 'print_app_data' "
  printf "using argument 0x%lx\n\n", $arg0

  set $app_data = (AppData *)$arg0
  printf "AppData : \n"
  print *$app_data
  # print *(AppData *)$arg0
  if $app_data->cancellable != 0x0
      printf "AppData Recipe Cancellable :\n"
      print  *$app_data->cancellable
      printf "AppData Recipe Cancellable->Priv:\n"
      print *$app_data->cancellable->priv
  else
      print "AppData Recipe Cancellable : None\n"
  end
  printf "AppData Recipe:\n"
  print *$app_data->recipe

end

#
# print_all_app_data
#
# Prints content of app data including
# its task list. The app_data is defined by
# (AppData *) defined in file server.h
#
# Sample use:
# print_all_app_data 0x<addr-of-AppData>
# print_all_app_data variable-containing-AppData-address
# print_all_app_data app_data #app_data commonly used var
#
define print_all_app_data
  setup_env

  printf "\n\nGenerated by gdb script 'print_all_app_data' "
  printf "using argument 0x%lx\n\n", $arg0

  print_app_data $arg0

  printf "\nAPPDATA TASKS:\n"
  printf   "-------------\n"
  print_all_task_data $app_data

end
